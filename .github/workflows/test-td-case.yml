name: Test TDengine cases

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v3


      - name: Build tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y build-essential cmake


      - name: Set up python
        run: |
          python --version


      - name: Cache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.5
        with:
          path: ~/.poetry
          key: ubuntu-20.04-poetry

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      #----------------------------------------------
      # build your TDengine 3.0
      #----------------------------------------------
      - name: Build TDengine 3.0
        run: |
          git clone --recursive --depth 1 https://github.com/taosdata/TDengine.git -b 3.0 TDengine_v3
          cd TDengine_v3
          mkdir build
          cd build
          cmake ../ -DBUILD_JDBC=false -DCMAKE_INSTALL_PREFIX:PATH=`realpath ../../local/` -DBUILD_HTTP=false
          make -j8
          sudo make install
          ls -alh /etc/taos/
          cd ../../


      #----------------------------------------------
      #              pip install dependencies
      #----------------------------------------------
      - name: Pip install dependencies
        run: |
          cd TDengine_v3/tests/
          pip3 install pip --upgrade
          pip3 install -r requirements.txt
          pip3 install pyopenssl --upgrade


      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Test TDengine 3.0
        run: |
          cd TDengine_v3/tests/system-test
          python3 ./test.py -f 0-others/show.py
          python3 ./test.py -f 1-insert/insert_drop.py
          python3 ./test.py -f 2-query/floor.py
          python3 ./test.py -f 7-tmq/basic5.py


      - name: 'Upload taosd logs'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: log-v3-taosd
          path: /tmp/taos/v3/log/
          retention-days: 1
